#!/bin/bash
#sudo bash #To force run the script as superUser
#trap "echo '\\n'All the users were created successfully." EXIT
echo `readlink $0`

#Only consider the first paramater if many are given -- $1
if [ -n "$1" ] && [ -f "$1" ]; then
	userAccounts="$1"
else
	userAccounts=`mktemp -t omegaServer.users.XXXXXX`
	echo "Temporary data will be stored in "$userAccounts
	. getUserInfo #Loads getUInfo function

	while echo;do
		getUInfo $userAccounts

		while echo; do
			read -n1 -p "Do you want to add more? [Y/n]: " eoc; echo
			case $eoc in
				y|Y) break;;
				n|N) break 2;;
			esac
			done
	done
fi

SERVER_DIR=/home/OmegaServer
MANAGER_FILES=managerHome
USER_FILES=userHome

mkdir log_files
mkdir -p $SERVER_DIR
#Create userlevel groups
for x in Users Managers Ceo;do
	echo "groupadd omega"$x
done

cat  $userAccounts | while read aNum branch citizen age legacy; do
#	Create Branch
	if ! ( id $branch &> /dev/null); then
		echo "useradd -g omegaManagers -G omegaUsers -mk $MANAGER_FILES -b $SERVER_DIR $branch"
		echo $branch >> log_files/managers.log # Or Branches
	fi
#	Create Account
	if ! ( id $aNum &> /dev/null);then
		echo "useradd -g omegaUsers -mk $USER_FILES -b $SERVER_DIR/$branch $aNum"
		echo $aNum>>log_files/users.log
	else
		echo "User $aNum already exists"
	fi
#	Create a group based on citizenship
	if ! ( id $citizen &> /dev/null); then #Assuming the citizenship as the required category
		echo "groupadd $citizen"
		echo $citizen >> log_files/citizenship.log
	fi
#	Create a group based on age reservation
	if [ $age = "-" ]; then
		age=""
	elif ! ( id $age &> /dev/null ); then
		echo "groupadd $age"
		echo $age >> log_files/age_reservation.log
	fi
#	Create a group based on legacy
	if [ $legacy = "-" ]; then
		legacy=""
	elif ! ( id $legacy &> /dev/null ); then
		echo "groupadd $legacy"
		echo $legacy >> log_files/legacy.log
	fi
#	Add the user to the respective groups
	echo "usermod -aG $citizen $age $legacy"
done
